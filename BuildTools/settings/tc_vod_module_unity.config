<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="IEventAggregator" type="Microsoft.Practices.Composite.Events.IEventAggregator, Microsoft.Practices.Composite" />
    <alias alias="EventAggregator" type="Microsoft.Practices.Composite.Events.EventAggregator, Microsoft.Practices.Composite" />
    <alias alias="IValueConverter" type="System.Windows.Data.IValueConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />    
    
    <namespace name="VOD" />
    <assembly name="tc_vod_module" />

    <container>
      <!-- Event Aggregator -->
      
      <register type="IEventAggregator" mapTo="EventAggregator">
        <lifetime type="singleton" />
      </register>

      <!-- View Models -->

      <register type="ViewModels.MainWindowViewModel">
        <constructor>
          <param name="_messageBus" type="IEventAggregator" />
          <param name="_window_enabled" value="True" />
        </constructor>
      </register>

      <register type="ViewModels.VideoFilesViewModel">
        <lifetime type="singleton" />
        <constructor>
          <param name="_messageBus" type="IEventAggregator" />
          <param name="_window_enabled" value="True" />
          <!--
          <param name="_playlist" value="D:\moodmedia\playlist\playlist_v5.json" />
          <param name="_playlist" value="{none}"/>
          -->
          <param name="_playlist" value="{none}"/>
          <param name="_folders" value="D:\media_files,D:\videos" />
          <param name="_types" value="mp4,jpg,jpeg,png,bmp" />
        </constructor>
      </register>

      <register type="ViewModels.TimeViewModel">
        <lifetime type="singleton" />
        <constructor>
          <param name="_messageBus" type="IEventAggregator" />
          <param name="_window_enabled" value="True" />
        </constructor>
      </register>

      <!--
      <register type="ViewModels.VideoFileRowViewModel" />
      -->

      <register type="ViewModels.PlayerViewModel">
        <lifetime type="singleton" />
        <constructor>
          <param name="_messageBus" type="IEventAggregator" />
          <param name="_window_enabled" value="False" />
        </constructor>
      </register>
      
      <!--
      <register type="ViewModels.VideoPlayerViewModel">
        <lifetime type="singleton" />
        <constructor>
          <param name="_messageBus" type="IEventAggregator" />
          <param name="_window_enabled" value="False" />
        </constructor>
      </register>
      -->

      <!-- Message Box -->

      <register type="MessageBox.IMessageBoxService" mapTo="MessageBox.MessageBoxService">
        <lifetime type="singleton" />
      </register>

      <!-- Log4Net Logger -->

      <register type="Logger.ILogger" mapTo="Logger.Log4NetWrapper" name="Log4NetLogger">
        <lifetime type="singleton" />
      </register>

      <!-- Console Debug Logger -->  
      
      <!--
      <register type="Logger.ConfigLoggerInfo" name="ConsoleLoggerInfo">
        <constructor>
          <param name="_prefix">
            <value value="Console" />
          </param>
        </constructor>
      </register>
      
      <register type="Logger.ILogger" mapTo="Logger.DebugLogger" name="ConsoleDebugLogger">
        <lifetime type="singleton" />
        <method name="SetLoggerInfo">
          <param name="logger_info" type="Logger.ConfigLoggerInfo">
            <dependency name="ConsoleLoggerInfo" />
          </param>
        </method>
      </register>
      -->
      
      <!-- File Debug Logger -->

      <!--
      <register type="Logger.ConfigLoggerInfo" name="FileLoggerInfo">
        <constructor>
          <param name="_prefix">
            <value value="File" />
          </param>
        </constructor>
      </register>

      <register type="Logger.ILogger" mapTo="Logger.DebugLogger" name="FileDebugLogger">
        <lifetime type="singleton" />
        <method name="SetLoggerInfo">
          <param name="logger_info" type="Logger.ConfigLoggerInfo">
            <dependency name="FileLoggerInfo" />
          </param>
        </method>
      </register>
      -->

      <!-- Debug Value Converter -->

      <!--
      <register type="IValueConverter" mapTo="ValueConverters.DebugConverter">
        <constructor>
          <param name="_break">
            <value value="False" />
          </param>
          <param name="_log">
            <value value="True" />
          </param>
        </constructor>
      </register>
      -->
    </container>
  </unity>
</configuration>