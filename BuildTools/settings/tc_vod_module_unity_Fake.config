<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="IEventAggregator" type="Microsoft.Practices.Composite.Events.IEventAggregator, Microsoft.Practices.Composite" />
    <alias alias="EventAggregator" type="Microsoft.Practices.Composite.Events.EventAggregator, Microsoft.Practices.Composite" />
    <alias alias="IValueConverter" type="System.Windows.Data.IValueConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />    
    
    <namespace name="Thumbnail" />
    <assembly name="Thumbnail" />

    <container>
      <!-- Event Aggregator -->
      
      <register type="IEventAggregator" mapTo="EventAggregator">
        <lifetime type="singleton" />
      </register>

      <!-- Authentication -->

	  <register type="Authentication.IAuthentication" mapTo="Authentication.Authentication">
        <lifetime type="singleton" />
      </register>

      <!-- View Models -->
  
      <register type="ViewModel.MainViewModel">
        <lifetime type="singleton" />
        <constructor>
          <param name="_messageBus" type="IEventAggregator" />
          <param name="_window_enabled" value="False" />
        </constructor>
      </register>

      <register type="ViewModel.LoginViewModel">
        <lifetime type="singleton" />
        <constructor>
          <param name="_messageBus" type="IEventAggregator" />
          <param name="_window_enabled" value="True" />
        </constructor>
      </register>

      <register type="ViewModel.StatusViewModel">
        <lifetime type="singleton" />
        <constructor>
          <param name="_messageBus" type="IEventAggregator" />
          <param name="_window_enabled" value="False" />
        </constructor>
      </register>

      <register type="ViewModel.PropertyViewModel">
        <constructor>
          <param name="_messageBus" type="IEventAggregator" />
          <param name="_window_enabled" value="False" />
        </constructor>
      </register>

      <!-- Message Box -->

      <register type="MessageBox.IMessageBoxService" mapTo="MessageBox.MessageBoxService">
        <lifetime type="singleton" />
      </register>

      <!-- Threads -->

      <!--      
      <register type="FNThread.IFileNetThread" mapTo="FNThread.FileNetThread" />
      -->

      <!-- Log4Net Logger -->

      <!--
      <register type="Logger.ILogger" mapTo="Logger.Log4NetWrapper" name="Log4NetLogger">
        <lifetime type="singleton" />
      </register>
      -->

      <!-- Console Debug Logger -->  
      
      <!--
      <register type="Logger.ConfigLoggerInfo" name="ConsoleLoggerInfo">
        <constructor>
          <param name="_prefix">
            <value value="Console" />
          </param>
        </constructor>
      </register>
      
      <register type="Logger.ILogger" mapTo="Logger.DebugLogger" name="ConsoleDebugLogger">
        <lifetime type="singleton" />
        <method name="SetLoggerInfo">
          <param name="logger_info" type="Logger.ConfigLoggerInfo">
            <dependency name="ConsoleLoggerInfo" />
          </param>
        </method>
      </register>
      -->
      
      <!-- File Debug Logger -->

      <!--
      <register type="Logger.ConfigLoggerInfo" name="FileLoggerInfo">
        <constructor>
          <param name="_prefix">
            <value value="File" />
          </param>
        </constructor>
      </register>

      <register type="Logger.ILogger" mapTo="Logger.DebugLogger" name="FileDebugLogger">
        <lifetime type="singleton" />
        <method name="SetLoggerInfo">
          <param name="logger_info" type="Logger.ConfigLoggerInfo">
            <dependency name="FileLoggerInfo" />
          </param>
        </method>
      </register>
      -->

      <!-- Debug Value Converter -->

      <!--
      <register type="IValueConverter" mapTo="ValueConverters.DebugConverter">
        <constructor>
          <param name="_break">
            <value value="False" />
          </param>
          <param name="_log">
            <value value="True" />
          </param>
        </constructor>
      </register>
      -->
      
      <!-- Repository Database -->
      
      <register type="Database.ConfigSQLServerInfo" name="RepositorySQLInfo">
        <lifetime type="singleton" />
        <constructor>
          <param name="_filename">
            <value value="Servers" />
          </param>
          <param name="_prefix">
            <value value="Repository" />
          </param>
        </constructor>
      </register>

      <register type="Database.IDBManager" mapTo="Database.OracleDBManager" name="RepositoryManager" />

	  <!-- 
      <register type="Database.IDBManager" mapTo="Database.SQLDBManager" name="RepositoryManager" />
      -->

      <register type="Database.RepositoryDatabase">
          <constructor>
            <param name="_db_manager" type="Database.IDBManager">
              <dependency name="RepositoryManager" />
            </param>
            <param name="_server_info" type="Database.ConfigSQLServerInfo">
              <dependency name="RepositorySQLInfo" />
            </param>
          </constructor>
      </register>

      <!-- Documentation Database -->
      
      <register type="Database.ConfigSQLServerInfo" name="DocumentSQLInfo">
        <lifetime type="singleton" />
        <constructor>
          <param name="_filename">
            <value value="Servers" />
          </param>
          <param name="_prefix">
            <value value="Document" />
          </param>
        </constructor>
      </register>

      <register type="Database.IDBManager" mapTo="Database.OracleDBManager" name="DocumentManager" />
      
      <register type="Database.DocumentDatabase">
        <constructor>
          <param name="_db_manager" type="Database.IDBManager">
            <dependency name="DocumentManager" />
          </param>
          <param name="_server_info" type="Database.ConfigSQLServerInfo">
            <dependency name="DocumentSQLInfo" />
          </param>
        </constructor>
      </register>

      <register type="Database.RepositoryList" />

      <!-- Security Database -->

	  <register type="Database.ConfigSQLServerInfo" name="SecuritySQLInfo">
	    <lifetime type="singleton" />
		<constructor>
		  <param name="_filename">
		    <value value="Servers" />
	      </param>
		  <param name="_prefix">
		    <value value="Security" />
	      </param>
        </constructor>
	  </register>

	  <register type="Database.IDBManager" mapTo="Database.OracleDBManager" name="SecurityManager" />

	  <!--     
      <register type="Database.IDBManager" mapTo="Database.SQLDBManager" name="SecurityManager" />
      -->

      <register type="Database.SecurityDatabase">
	    <constructor>
		  <param name="_db_manager" type="Database.IDBManager">
		    <dependency name="SecurityManager" />
		  </param>
		  <param name="_server_info" type="Database.ConfigSQLServerInfo">
		    <dependency name="SecuritySQLInfo" />
		  </param>
		</constructor>
      </register>
	</container>
  </unity>
</configuration>