var util=require("util"),async=require("async"),path=require("path"),npmlog=require("npmlog"),request=require("request"),spawn=require("child_process").spawn,fs=require("fs"),readLine=require("readline"),novacom=require("./novacom"),installer=require("./install"),prefixPath="/media/developer/",prefixAppPath=prefixPath+"apps/usr/palm/applications",prefixServicePath=prefixPath+"apps/usr/palm/services",defaultGdbserverPort="9930";
(function(){var d=npmlog;d.heading="gdbserver";d.level="warn";var q={log:d,session:null,run:function(a,g,e){function m(b){d.verbose("gdbserver#_makeSession");a.nReplies=1;a.session=new novacom.Session(a.device,b)}function n(b,f){function c(c){c=Buffer.isBuffer(c)?c.toString().trim():c.trim();if("0"===c)e.port=b,f();else if("1"===c)b=Number(b)+1,n(b,f);else return f(Error("Failed to get Debug Port"))}d.verbose("gdbserver#run()#_findNewDebugPort#gdbPort:",b);null===b&&(b=p);"function"===typeof b&&(f=
b,b=p);var e=this,g=util.format("netstat -ltn 2>/dev/null | grep :%s | wc -l",b);async.series([function(b){a.session.run(g,process.stdin,c,process.stderr,b)}],function(b,c){if(b)return f(b)})}if("function"!==typeof e)throw Error("Missing completion callback (next="+util.inspect(e)+")");var l=this,h=a.appId,k=a.serviceId,p=a.port||defaultGdbserverPort;if(h||k){var q=0;process.on("SIGINT",function(){d.verbose("This is SIGINT handling...");0<q++&&(d.verbose("To prevent hangup due to an abnormal disconnection"),
process.exit(1));async.waterfall([m.bind(l),function(b,a){l.session=b;a()},l.getPidUsingPort.bind(l,l.port),l.killProcByPid.bind(l),function(b){l.session.end();setTimeout(b,500)}],function(b,a){b&&process.exit(1);process.exit(0)})});async.waterfall([function(b){installer.list(a,function(f,c){c instanceof Array&&(a.instPkgs=c);b(f)})},m.bind(this),function(b,a){this.session=b;b.run("if ! type gdbserver > /dev/null; then echo 1; else echo 0; fi;",null,function(b){if("1"==(Buffer.isBuffer(b)?b.toString().trim():
b.trim()))return a(Error("gdbserver command is not available in the target device"));setImmediate(a)},null,function(b){if(b)return setImmediate(a,b)})}.bind(this),function(b){function f(a){m=Buffer.isBuffer(a)?a.toString().trim():a.trim();if("{"===m[0])d.verbose("gdbserver#run()#_readAppInfo#metaData:",m),b(null,m);else return b(Error("Failed to get appinfo.json"))}d.verbose("gdbserver#_readAppInfo");var c=h||k;if(a.instPkgs){var n=h?"applications":"services";a.instPkgs.every(function(b){return-1!==
c.indexOf(b.id)?(prefixAppPath=prefixServicePath=path.join(path.dirname(b.folderPath),"..",n).replace(/\\/g,"/"),!1):!0})}if(h)var e=path.join(prefixAppPath,h,"appinfo.json");else if(k)e=path.join(prefixServicePath,k,"services.json");else return b(Error("gdbserver launch failed due to no appId"));var e=e.replace(/\\/g,"/"),g="cat "+e,m;async.series([function(b){a.session.run(g,process.stdin,f,process.stderr,b)}],function(a,f){if(a)return b(Error(c+" was not installed"))})}.bind(this),function(b,a){d.verbose("gdbserver#run()#_getExecFileName#metaData:",
b);try{var c=JSON.parse(b);if(h){if(!c.main)return a(Error("Failed to get Executable File Name from appinfo.json"));if("web"===c.type)return a(Error(c.id+" is not a native app"));this.execName=c.main}else if(k){if("native"!==c.engine)return a(Error(c.id+" is not a native service"));this.execName=c.executable}d.verbose("gdbserver#run()#_getExecFileName#execName:",this.execName);a()}catch(r){a(r)}}.bind(this),this.getPidUsingPort.bind(this,p),this.killProcByPid.bind(this),n.bind(this,p),function(b){d.verbose("gdbserver#run()#_getEnvFromDevice");
if("root"!=a.session.getDevice().username)setImmediate(b,null,"");else{var f="";a.session.run("find /etc/jail_native_devmode.conf 2>/dev/null | xargs awk '/setenv/{printf \"export %s=%s;\\n\", $2,$3}' | xargs echo",null,function(a){f=Buffer.isBuffer(a)?f.concat(a.toString()):f.concat(a);setImmediate(b,null,f)},null,function(a){if(a)return setImmediate(b,a)})}}.bind(this),function(a,f){d.verbose("gdbserver#run()#_addUserEnv");if(h)var b={SDL_VIDEODRIVER:"wayland",XDG_RUNTIME_DIR:"/tmp/xdg",LD_LIBRARY_PATH:"$LD_LIBRARY_PATH:"+
path.join(prefixAppPath,h,"lib").replace(/\\/g,"/")};else k&&(b={LD_LIBRARY_PATH:"$LD_LIBRARY_PATH:"+path.join(prefixServicePath,k,"lib").replace(/\\/g,"/")});b=a.concat(function(a,b){var c="";Object.keys(a).forEach(function(b){c=c.concat("export ").concat(b).concat("=").concat(a[b]).concat(";")});return c}(b));f(null,b)}.bind(this),function(b,f){d.verbose("gdbserver#run()#_launchGdbserver");var c;h?c=path.join(prefixAppPath,h):k&&(c=path.join(prefixServicePath,k));c=util.format("cd %s && gdbserver :%s %s",
c,this.port,path.join(c,this.execName)).replace(/\\/g,"/");a.session.runNoHangup(b+c,function(a){a=Buffer.isBuffer(a)?a.toString():a;console.log("[gdbserver] "+a)},function(){d.verbose("gdbserver#run()#_launchGdbserver#__exit");process.exit(0)},f)}.bind(this),function(b){d.verbose("gdbserver#run()#_portForward");a.session.forward(this.port,this.port,b)}.bind(this),function(b){d.verbose("gdbserver#run()#_waitExit");var f=a.session.getDevice();console.log(" >> gdb can connect to [target remote",f.host+
":"+this.port+"]\n");b()}.bind(this)],function(a,f){d.verbose("gdbserver#run()","err: ",a,"result:",f);e(a,f)})}else e(Error("gdbserver launch failed due to no appId"))},close:function(a,g,e){d.verbose("gdbserver#close");g=a.port||defaultGdbserverPort;if("function"!==typeof e)throw Error("Missing completion callback (next="+util.inspect(e)+")");async.waterfall([function(e){a.nReplies=1;a.session=new novacom.Session(a.device,e)}.bind(this),function(a,e){this.session=a;e()}.bind(this),this.getPidUsingPort.bind(this,
g),this.killProcByPid.bind(this),function(a){setTimeout(a,1E3)},this.closeSession],function(a,n){d.verbose("gdbserver#close()","err: ",a,"results:",n);e(a,n)})},killPrevGdbserver:function(a){options.session?this.session.runNoHangup("kill -9 `pidof gdbserver` 2>/dev/null",a):a(Error("gdbserver#killPrevGdbserver()#no session"))},getPidUsingPort:function(a,d){function e(a){(a=Buffer.isBuffer(a)?a.toString().trim():a.trim())?(a=a.split(" ").filter(function(a){return""!==a.trim()}),d(null,a)):d()}"function"===
typeof a&&(d=a,a=defaultGdbserverPort);if(this.session){var g=util.format("fuser -n tcp %s 2>/dev/null | awk '{print $0}' | xargs echo",a);async.series([function(a){this.session.run(g,process.stdin,e,process.stderr,a)}.bind(this)],function(a,e){if(a)return d(a)})}else d(Error("gdbserver#getPidUsingPort()#no session"))},killProcByPid:function(a,g){d.verbose("gdbserver#killProcByPid");if("function"===typeof a)return a();if(!this.session)return g(Error("gdbserver#killPrevGdbserver()#no session"));var e=
[];if(a instanceof Array)e=a;else if(a instanceof String)e.push(a);else return g(Error("gdbserver#killPrevGdbserver()#no pid"));e=util.format("kill -9 %s 2>/dev/null",e.join(" "));this.session.runNoHangup(e,g)},closeSession:function(a){if(!this.session)return d.verbose("This session is already terminated"),a();this.session.end();this.session=null;a()}};"undefined"!==typeof module&&module.exports&&(module.exports=q)})();
