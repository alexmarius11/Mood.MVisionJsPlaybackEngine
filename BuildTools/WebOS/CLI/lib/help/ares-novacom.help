{
    "display" : ["name", "synopsis", "options", "extraoption", "description", "examples", "extraexample"],
    "notab":["examples", "extraexample"],
    "notitle" : ["extraoption", "extraexample"],
    "name" : "ares-novacom - Command Line Tool to control target device",
    "synopsis" : {
        "default" : [
            "ares-novacom [OPTION...] -r, --run <DEVICE_COMMAND>"
        ],
        "tv" : [
            "ares-novacom [OPTION...] -f, --forward [--port, -p DEVICE_PORT1[:HOST_PORT1]][--port, -p DEVICE_PORT2[:HOST_PORT2]][...]",
            "ares-novacom [OPTION...] -k, --getkey"
        ],
        "signage" : [
            "ares-novacom [OPTION...] -f, --forward [--port, -p DEVICE_PORT1[:HOST_PORT1]][--port, -p DEVICE_PORT2[:HOST_PORT2]][...]",
            "ares-novacom [OPTION...] -k, --getkey"
        ],
        "commercialtv" : [
            "ares-novacom [OPTION...] -f, --forward [--port, -p DEVICE_PORT1[:HOST_PORT1]][--port, -p DEVICE_PORT2[:HOST_PORT2]][...]",
            "ares-novacom [OPTION...] -k, --getkey"
        ]
    },
    "description" : [
      {
        "default": "This command has miscellaneous functions.",
        "tv" : [
          "",
          "'getkey' option gets a ssh key from the running 'Secure Developer Mode' app on the device ",
          "ares commands use this ssh key to communicate with the device.",
          "",
          "Emulator does not require this process as ares commands already have a ssh key for the emulator."
        ],
        "signage" : [
          "",
          "'getkey' option gets a ssh key from the running 'Secure Developer Mode' app on the device ",
          "ares commands use this ssh key to communicate with the device.",
          "",
          "Emulator does not require this process as ares commands already have a ssh key for the emulator."
        ],
        "commercialtv" : [
          "",
          "'getkey' option gets a ssh key from the running 'Secure Developer Mode' app on the device ",
          "ares commands use this ssh key to communicate with the device.",
          ""
        ]
      }
    ],
    "examples" : [
      {
        "default" : [
          "# Run 'ps -aux' command on the DEVICE",
          "ares-novacom --run \"ps -aux\" -d DEVICE",
          "",
          "# Forward the DEVICE tcp port 22 to the host tcp port 3030",
          "ares-novacom --forward --port 22:3030 -d DEVICE"
        ],
        "tv": [
          "",
          "# Get a ssh key from the running 'Secure Developer Mode' app on the DEVICE",
          "ares-novacom --getkey -d DEVICE"
        ],
        "signage": [
          "",
          "# Get a ssh key from the running 'Secure Developer Mode' app on the DEVICE",
          "ares-novacom --getkey -d DEVICE"
        ],
        "commercialtv": [
          "",
          "# Get a ssh key from the running 'Secure Developer Mode' app on the DEVICE",
          "ares-novacom --getkey -d DEVICE"
        ]
      }
    ],
    "options" : {
        "cmdOpt":"option",
        "default" : ["device", "device-list", "help", "version", "verbose"],
        "device" : "-d, --device <DEVICE> @TAB@ Specify DEVICE to use",
        "device-list" : "-D, --device-list @TAB@ List the available DEVICEs",
        "help" : "-h, --help @TAB@ Display this help",
        "version" : "-V, --version @TAB@ Display version info",
        "verbose" : "-v @TAB@ Display this verbose log"
    },
    "extraoption" : {
        "cmdOpt":"hidden",
        "default" : {
            "cmdOpt":"option",
            "default" : ["passphrase", "level"],
            "passphrase" : "-pass, --passphrase PASSPHRASE",
            "level" : "--level <LEVEL> @TAB@ Set a log LEVEL of 'silly', 'verbose', 'info', 'http', 'warn', 'error'"
        }
    },
    "extraexample" : {
        "cmdOpt" : "hidden",
        "default" : [
          "# Get a ssh key and set passphrase value in the device info",
          "ares-novacom <PACKAGE_FILE> -d <DEVICE> --getkey --passphrase ABCDEF",
          ""
        ]
    }
}
