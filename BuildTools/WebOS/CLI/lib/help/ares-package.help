{
    "display" : ["name", "synopsis", "options", "extraoption", "description", "examples", "extraexample"],
    "notab":["examples", "extraexample"],
    "notitle" : ["extraoption", "extraexample"],
    "name" : "ares-package - Create a package containing an app",
    "synopsis" : {
        "default" : [
            "ares-package [OPTION...] APP_DIR [SERVICE_DIR [...]]"
        ]
    },
    "description" : [
        {
          "default" : [
            "This command makes a package.",
            "",
            "APP_DIR is a app directory containing a valid appinfo.json file.",
            "",
            "SERVICE_DIR is a directory containing a valid services.json file.",
            "",
            "APP_DIR or OUTPUT_DIR can be a relative or absolute path."
          ],
          "tv" : [
            "",
            "If you do not need to minify the app, use 'no-minify' option."
          ]
        }
    ],
    "examples" : [
        "",
        "# Create a package without including all text files and the test directory.",
        "ares-package -e \"*.txt\" -e \"test\"",
        "",
        "# Create a package for the webOS app with multiple webOS services",
        "ares-package APP_DIR SVC1_DIR SVC2_DIR SVC3_DIR",
        ""
    ],
    "options" : {
        "cmdOpt":"option",
        "default" : ["check", "outdir", "app-exclude", "level", "help", "version", "verbose"],
        "tv" : ["no-minify", "rom"],
        "watch" : ["no-minify", "rom"],
        "check" : "-c, --check @TAB@ Check the application but don't package it",
        "outdir" : "-o, --outdir <OUTPUT_DIR> @TAB@ Use OUTPUT_DIR as the output directory",
        "no-minify" : "-n, --no-minify @TAB@ Skip the minification phase",
        "app-exclude" : "-e, --app-exclude PATTERN @TAB@ Exclude files, given as a PATTERN",
        "rom" : [
            "-r, --rom @TAB@ Do not create ipk, instead output a folder structure"
        ],
        "deployscript" : [
            "-d, --deployscript <deploy.js Path>",
            "@TAB@ This option is available only for an enyo app '2.3 ~ 2.5'",
            "@TAB@ Set the path to enyo deploy script"
        ],
        "help" : "-h, --help @TAB@ Display this help",
        "version" : "-V, --version @TAB@ Display version info",
        "verbose" : "-v @TAB@ Display this verbose log"
    },
    "extraoption" : {
        "cmdOpt":"hidden",
        "default" : {
            "cmdOpt":"option",
            "default" : ["force", "pkgname", "pkgversion", "level"],
            "force" : [
            "-f, --force @TAB@ Make .ipk package forcibly with same file structure in APP_DIR",
            "  (ex) APP_DIR/",
            "              +-- usr/",
            "              +-- usr/bin",
            "              +-- usr/bin/foo",
            "              +-- etc/",
            "              +-- etc/boo.conf",
            "                            '-f, --force' option will keep this structure in .ipk"
            ],
            "pkgname" : "-pn, --pkgname <NAME> @TAB@ Set package name",
            "pkgversion" : "-pv, --pkgversion <VERSION> @TAB@ Set package version",
            "level" : "--level <LEVEL> @TAB@ Set a log LEVEL of 'silly', 'verbose', 'info', 'http', 'warn', 'error'"
        }
    },
    "extraexample" : {
        "cmdOpt" : "hidden",
        "default" : [
          "",
          "# Create a package although directory has no appinfo.json and no services.json",
          " make a ipk file which of package name is 'foopkg' and package version is '1.0.1'",
          " the following command should generate a foopkg_1.0.1.ipk",
          "ares-package APP_DIR -f -pn foopkg -pv 1.0.1"
        ]
    }
}
